version: '3'

services:
    zookeeper:
        image: zookeeper
        user: "0"
        container_name: zookeeper
        hostname: zookeeper
        ports:
            - "2181:2181"
            - "2182:2182"
        volumes:
            - ./kafka/zookeeper/data:/data
            - ./kafka/zookeeper/datalog:/datalog

    kafka1:
        image: confluentinc/cp-kafka:latest
        user: "0"
        hostname: kafka1
        container_name: kafka1
        depends_on:
          - zookeeper
        ports:
          - 9092:9092
        environment:
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29092
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
          KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        volumes:
            - ./kafka/kafka1/data:/var/lib/kafka/data
    kafka2:
        image: confluentinc/cp-kafka:latest
        user: "0"
        hostname: kafka2
        container_name: kafka2
        depends_on:
          - zookeeper
        ports:
          - 9093:9093
        environment:
          KAFKA_BROKER_ID: 2
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:29093
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
          KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        volumes:
            - ./kafka/kafka2/data:/var/lib/kafka/data
    kafka3:
        image: confluentinc/cp-kafka:latest
        user: "0"
        hostname: kafka3
        container_name: kafka3
        depends_on:
          - zookeeper
        ports:
          - 9094:9094
        environment:
          KAFKA_BROKER_ID: 3
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:29094
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
          KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        volumes:
            - ./kafka/kafka3/data:/var/lib/kafka/data   
            
    kafka-manager:
        image: hlebalbau/kafka-manager:stable
        hostname: kafka-manager
        container_name: kafka-manager
        depends_on:
            - zookeeper
        ports:
           - 9000:9000
        environment:
          ZK_HOSTS: zookeeper:2181
          APPLICATION_SECRET: "random-secret"

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0
        container_name: elasticsearch
        restart: always
        environment:
          - xpack.security.enabled=false
          - discovery.type=single-node
        ulimits:
          memlock:
            soft: -1
            hard: -1
          nofile:
            soft: 65536
            hard: 65536
        cap_add:
          - IPC_LOCK
        volumes:
          - elasticsearch-data:/usr/share/elasticsearch/data
        ports:
          - 9200:9200
    kibana:
        container_name: kibana
        image: docker.elastic.co/kibana/kibana:7.4.0
        restart: always
        environment:
          - ELASTICSEARCH_HOSTS=http://elasticsearch:9200    # address of elasticsearch docker container which kibana will connect
        ports:
          - 5601:5601
        depends_on:
          - elasticsearch                                   # kibana will start when elasticsearch has started
volumes:
    elasticsearch-data:
           
networks:
    default:
        external:
            name: net
            
